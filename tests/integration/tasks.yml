# Test Calendars API calls
# Test data, required on the test instance:
# * A task with the a description containing a newline: "describe\nsomething"
---
- hosts: horde_servers:squirrel_servers:mock_servers:squirrel_servers
  ignore_errors: true
  gather_facts: false
  tasks:
    - name: Create test folder
      ansible.builtin.file:
        dest: "/tmp/openxport_ansible_output/{{ inventory_hostname }}"
        state: directory
        mode: '0755'
      delegate_to: 127.0.0.1

    - name: Fire Task API calls
      uri:
        body: '{"using":["urn:ietf:params:jmap:tasks"],"methodCalls":[["Task/get", {"accountId":"{{ admin_user }}"}, "0"]]}'
        body_format: json
        force_basic_auth: true  # TODO once we return correct 401 we can remove this
        url: "{{ local_address }}"
        url_password: "{{ admin_pass }}"
        url_username: "{{ admin_user }}"
        method: POST
        return_content: true
        validate_certs: false
      delegate_to: 127.0.0.1
      register: call_response

    - name: Store reply under /tmp/
      copy:
        content: "{{ call_response.content }}"
        dest: "/tmp/openxport_ansible_output/{{ inventory_hostname }}/\
               task_get.json"
      delegate_to: 127.0.0.1

    - debug:
        msg: "No task with type jstask found.\nFound: {{ call_response.json.methodResponses[0][1] | community.general.json_query('list[?\"@type\" == `jstask`]') }}"
      when: "call_response.json.methodResponses[0][1] | community.general.json_query('list[?\"@type\" == `jstask`]') | length == 0"
      failed_when: true

    - debug:
        msg: "No task with description containing newline found.\nFound: {{ call_response.json.methodResponses[0][1] | community.general.json_query('list[?description == `describe<br>something`]') }}"
      when: "call_response.json.methodResponses[0][1] | community.general.json_query('list[?description == `describe<br>something`]') | length != 0"
      failed_when: true

- hosts: horde_servers:squirrel_servers:squirrel_servers
  ignore_errors: true
  gather_facts: false
  tasks:
    - name: Fire Task API calls for empty user without tasks
      uri:
        body: '{"using":["urn:ietf:params:jmap:tasks"],"methodCalls":[["Task/get", {"accountId":"{{ empty_user }}"}, "0"]]}'
        body_format: json
        force_basic_auth: true
        url: "{{ local_address }}"
        url_password: "{{ empty_pass }}"
        url_username: "{{ empty_user }}"
        method: POST
        return_content: true
        validate_certs: false
      delegate_to: 127.0.0.1
      register: call_response_empty

    - debug:
        msg: "Tasks for user without tasks should return an empty list.\n{{ call_response_empty.json }}"
      when: "call_response_empty.json.methodResponses[0][1] | community.general.json_query('list') | length != 0"
      failed_when: true
